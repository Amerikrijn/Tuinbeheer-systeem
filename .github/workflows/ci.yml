name: CI/CD Pipeline

# Trigger workflow on feature branches and other development branches
on:
  push:
    branches: [ preview, develop, feature/*, fix/*, hotfix/* ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, preview, develop ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'preview'
        type: choice
        options:
        - preview
        - staging
        - production

env:
  NODE_VERSION: '18'

jobs:
  # Security Check - Prevent direct pushes to main
  security-check:
    name: 🔒 Security Check
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: 🚨 Block Direct Push to Main
        run: |
          echo "❌ DIRECT PUSH TO MAIN BLOCKED!"
          echo "🚨 Main branch is protected and requires a Pull Request"
          echo "📋 Please create a PR from a feature branch to preview first"
          echo "🔒 This is a security measure to prevent accidental deployments"
          exit 1

  # Lint and Test
  lint-and-test:
    name: 🧪 Lint & Test
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🔍 Lint code
        run: npm run lint

      - name: 🧪 Run tests
        run: npm run test

      - name: 🏗️ Build project
        run: npm run build

  # Deploy to Preview (from feature branches)
  deploy-preview:
    name: 🚀 Deploy to Preview
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main' && github.ref != 'refs/heads/preview'
    environment: preview
    needs: lint-and-test
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🚀 Deploy to Preview
        run: |
          echo "🚀 Deploying to Preview environment..."
          echo "📋 Branch: ${{ github.ref_name }}"
          echo "🔗 Preview URL will be available after deployment"

  # Deploy to Preview (from preview branch)
  deploy-preview-main:
    name: 🚀 Deploy Preview to Staging
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/preview'
    environment: staging
    needs: lint-and-test
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🚀 Deploy Preview to Staging
        run: |
          echo "🚀 Deploying Preview to Staging environment..."
          echo "📋 This is the main preview deployment"

  # Deploy to Production (only from main via PR)
  deploy-production:
    name: 🚀 Deploy to Production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'pull_request'
    environment: production
    needs: lint-and-test
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🚀 Deploy to Production
        run: |
          echo "🚀 Deploying to Production environment..."
          echo "📋 This deployment was triggered by a PR merge to main"

  # Notify on deployment
  notify:
    name: 📢 Notify Team
    runs-on: ubuntu-latest
    if: always()
    needs: [lint-and-test, deploy-preview, deploy-preview-main, deploy-production]
    steps:
      - name: 📢 Deployment Status
        run: |
          if [ "${{ needs.lint-and-test.result }}" == "success" ]; then
            echo "✅ Lint & Test: SUCCESS"
          else
            echo "❌ Lint & Test: FAILED"
          fi
          
          if [ "${{ needs.deploy-preview.result }}" == "success" ]; then
            echo "✅ Preview Deploy: SUCCESS"
          elif [ "${{ needs.deploy-preview.result }}" == "skipped" ]; then
            echo "⏭️ Preview Deploy: SKIPPED"
          else
            echo "❌ Preview Deploy: FAILED"
          fi
          
          if [ "${{ needs.deploy-preview-main.result }}" == "success" ]; then
            echo "✅ Staging Deploy: SUCCESS"
          elif [ "${{ needs.deploy-preview-main.result }}" == "skipped" ]; then
            echo "⏭️ Staging Deploy: SKIPPED"
          else
            echo "❌ Staging Deploy: FAILED"
          fi
          
          if [ "${{ needs.deploy-production.result }}" == "success" ]; then
            echo "✅ Production Deploy: SUCCESS"
          elif [ "${{ needs.deploy-production.result }}" == "skipped" ]; then
            echo "⏭️ Production Deploy: SKIPPED"
          else
            echo "❌ Production Deploy: FAILED"
          fi
