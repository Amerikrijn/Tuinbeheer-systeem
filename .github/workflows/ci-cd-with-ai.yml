name: Complete CI/CD with AI Testing
on:
  push:
    branches: [main]  # Alleen main, niet develop
  pull_request:
    branches: [main]

jobs:
  # Job 1: Je normale tests (bestaande pipeline)
  standard-tests:
    runs-on: ubuntu-latest
    name: 🧪 Standard Tests & Build
    steps:
                   - name: Checkout code
               uses: actions/checkout@v4
             
             - name: Setup Node.js
               uses: actions/setup-node@v4
               with:
                 node-version: '18'
                 cache: 'npm'
             
             - name: Install dependencies
               run: npm ci
             
             - name: Run tests
               run: npm test
             
             - name: Build project
               run: npm run build
             
             - name: Upload test results
               uses: actions/upload-artifact@v4
               with:
                 name: standard-test-results
                 path: |
                   coverage/
                   test-results/
  
  # Job 2: AI Testing Pipeline (parallel met job 1!)
  ai-testing:
    runs-on: ubuntu-latest
    name: 🤖 AI Testing Pipeline
    steps:
                   - name: Checkout code
               uses: actions/checkout@v4
             
             - name: Setup Node.js
               uses: actions/setup-node@v4
               with:
                 node-version: '18'
                 cache: 'npm'
      
      - name: Install AI Agent dependencies
        run: |
          echo "📦 Installing AI Agent dependencies..."
          cd agents/test-generator && npm ci
          cd ../quality-analyzer && npm ci
          cd ../auto-fix && npm ci
          cd ../pipeline-orchestrator && npm ci
      
                   - name: Run AI Testing Pipeline
               run: |
                 echo "🚀 Starting AI Testing Pipeline..."
                 cd agents/pipeline-orchestrator
                 npx ts-node cli.ts --workflow ci-ai-pipeline --execute
      
                   - name: Upload AI Results
               uses: actions/upload-artifact@v4
               if: always()  # Upload ook bij failure
               with:
                 name: ai-testing-results
                 path: |
                   agents/*/test-results/
                   agents/*/quality-results/
                   agents/*/auto-fix-results/
      
      - name: Generate AI Summary
        if: always()
        run: |
          echo "📊 Generating AI Testing Summary..."
          cd agents/pipeline-orchestrator
          
          # Maak een samenvatting van de AI resultaten
          if [ -f "../quality-analyzer/quality-results/quality-analysis-summary.md" ]; then
            echo "## 🤖 AI Testing Results Summary" >> ../../ai-summary.md
            echo "" >> ../../ai-summary.md
            cat "../quality-analyzer/quality-results/quality-analysis-summary.md" >> ../../ai-summary.md
            echo "" >> ../../ai-summary.md
          fi
          
          if [ -f "../auto-fix/auto-fix-results/fix-report-summary.md" ]; then
            echo "## 🔧 Auto-Fix Analysis Summary" >> ../../ai-summary.md
            echo "" >> ../../ai-summary.md
            cat "../auto-fix/auto-fix-results/fix-report-summary.md" >> ../../ai-summary.md
          fi
      
                   - name: Upload AI Summary
               uses: actions/upload-artifact@v4
               if: always()
               with:
                 name: ai-summary
                 path: ai-summary.md
  
  # Job 3: Deploy (alleen als beide jobs slagen)
  deploy:
    needs: [standard-tests, ai-testing]  # Wacht op beide!
    runs-on: ubuntu-latest
    name: 🚀 Deploy
    if: success()  # Alleen als beide jobs slagen
    steps:
                   - name: Checkout code
               uses: actions/checkout@v4
             
             - name: Download artifacts
               uses: actions/download-artifact@v4
               with:
                 name: ai-summary
      
      - name: Display AI Summary
        run: |
          echo "🤖 AI Testing Summary:"
          if [ -f "ai-summary.md" ]; then
            cat ai-summary.md
          else
            echo "No AI summary available"
          fi
      
      - name: Deploy to production
        run: |
          echo "🚀 Deploying to production..."
          echo "✅ Standard tests passed"
          echo "✅ AI testing completed"
          echo "🚀 Starting deployment..."
          
          # Trigger Vercel deployment
          echo "🌐 Triggering Vercel deployment..."
          echo "📱 Preview URL will be available in Vercel dashboard"
          echo "🚀 Production deployment will start automatically"
          
          # Note: Vercel automatically deploys on push to main
          # Preview deployments are available for all branches
  
  # Job 4: Comment PR with Results (alleen bij PRs)
  comment-pr:
    needs: [standard-tests, ai-testing]
    runs-on: ubuntu-latest
    name: 💬 Comment PR
    if: github.event_name == 'pull_request'
    steps:
                   - name: Checkout code
               uses: actions/checkout@v4
             
             - name: Download AI Summary
               uses: actions/download-artifact@v4
               with:
                 name: ai-summary
             
             - name: Comment PR with AI Results
               uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            let comment = '## 🤖 AI Testing Pipeline Results\n\n';
            
            // Check if AI summary exists
            if (fs.existsSync('./ai-summary.md')) {
              const summary = fs.readFileSync('./ai-summary.md', 'utf8');
              comment += summary + '\n\n';
            } else {
              comment += '⚠️ AI Testing completed but no summary available\n\n';
            }
            
            // Add status information
            comment += '### 📊 Pipeline Status\n';
            comment += `- 🧪 Standard Tests: ✅ **PASSED**\n`;
            comment += `- 🤖 AI Testing: ✅ **COMPLETED**\n`;
            comment += `- 🚀 Ready for deployment\n\n`;
            
            comment += '### 💡 Next Steps\n';
            comment += '- Review AI testing results above\n';
            comment += '- Consider applying suggested auto-fixes\n';
            comment += '- Merge when ready\n';
            
            // Post comment to PR
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });