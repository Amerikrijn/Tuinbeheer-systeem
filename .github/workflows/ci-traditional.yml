name: CI — Traditional Tests (Backup)

on:
  pull_request:
    branches: [ main, preview, develop ]
  push:
    branches: [ main, preview, develop ]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ci-traditional-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

# Only run if the complete pipeline is not running
jobs:
  check-complete-pipeline:
    runs-on: ubuntu-latest
    outputs:
      should-run: ${{ steps.check.outputs.should-run }}
    steps:
      - name: Check if complete pipeline is running
        id: check
        run: |
          # Check if the complete pipeline workflow is running
          if gh run list --workflow="CI/CD — Complete Pipeline" --status=in_progress --limit=1 | grep -q "in_progress"; then
            echo "should-run=false" >> $GITHUB_OUTPUT
            echo "Complete pipeline is running, skipping traditional CI"
          else
            echo "should-run=true" >> $GITHUB_OUTPUT
            echo "No complete pipeline running, proceeding with traditional CI"
          fi

  test:
    needs: check-complete-pipeline
    if: needs.check-complete-pipeline.outputs.should-run == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install
        run: npm ci

      - name: Lint
        run: npm run lint || echo "No lint script; skipping" 

      - name: Type check
        run: npm run type-check || echo "No type-check script; skipping"

      - name: Run tests (with coverage)
        run: npm run test:ci
        env:
          CI: true

      - name: Enforce coverage threshold (min 30%)
        run: |
          if [ ! -f coverage/lcov.info ]; then
            echo "❌ No coverage report (tests failed or coverage disabled)."
            exit 1
          fi
          COVERAGE=$(awk -F: '/^LH:/ {lh+=$2} /^LF:/ {lf+=$2} END { if (lf>0) printf "%.2f", (lh/lf)*100 }' coverage/lcov.info)
          echo "Line coverage: ${COVERAGE}%"
          THRESH=30
          below=$(awk -v c="$COVERAGE" -v t="$THRESH" 'BEGIN{ if (c+0<t+0) print 1; else print 0 }')
          if [ "$below" -eq 1 ]; then
            echo "❌ Coverage ${COVERAGE}% < ${THRESH}%"; exit 1
          fi
          echo "✅ Coverage OK"

      - name: Upload coverage (if exists)
        if: hashFiles('coverage/lcov.info') != ''
        uses: actions/upload-artifact@v4
        with:
          name: coverage-backup
          path: coverage/
