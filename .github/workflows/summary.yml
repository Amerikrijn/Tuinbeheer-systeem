name: "CI — Summary"

on:
  # Run this summary ONLY after other CI workflows have completed
  workflow_run:
    workflows: ["CI — Traditional Tests", "Security — Code Quality", "Security — Secret Scan"]
    types:
      - completed
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: ci-summary-${{ github.event.workflow_run.head_sha || github.sha }}
  cancel-in-progress: true

jobs:
  summarize:
    name: "📊 Final Summary"
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Install jq
        run: |
          sudo apt-get update && sudo apt-get install -y jq

      - name: Gather check runs via API
        id: gather
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          owner_repo="${{ github.repository }}"
          sha="${{ github.event.workflow_run.head_sha || github.sha }}"

          attempts=0
          max_attempts=60 # ~10 minutes at 10s intervals
          required_checks=("🧪 Traditional Tests" "Analyze" "Secret Scan")

          while true; do
            resp=$(curl -sS -H "Authorization: Bearer $GITHUB_TOKEN" -H "Accept: application/vnd.github+json" \
              "https://api.github.com/repos/$owner_repo/commits/$sha/check-runs?per_page=100")
            echo "$resp" > check-runs.json

            all_completed=true
            for name in "${required_checks[@]}"; do
              status=$(jq -r --arg n "$name" '.check_runs[] | select(.name == $n) | .status' check-runs.json | head -n1)
              if [ -z "$status" ] || [ "$status" != "completed" ]; then
                all_completed=false
              fi
            done

            if $all_completed; then
              break
            fi

            attempts=$((attempts+1))
            if [ $attempts -ge $max_attempts ]; then
              echo "Timed out waiting for all checks to complete" >&2
              break
            fi
            sleep 10
          done

          extract_conclusion() { jq -r --arg name "$1" '.check_runs[] | select(.name == $name) | .conclusion // .status' check-runs.json | head -n1; }
          tt_status=$(extract_conclusion "🧪 Traditional Tests")
          codeql_status=$(extract_conclusion "Analyze")
          secret_status=$(extract_conclusion "Secret Scan")
          echo "tt_status=$tt_status" >> $GITHUB_OUTPUT
          echo "codeql_status=$codeql_status" >> $GITHUB_OUTPUT
          echo "secret_status=$secret_status" >> $GITHUB_OUTPUT

      - name: Build combined report
        run: |
          to_mark() { case "$1" in success) echo "✅";; failure) echo "❌";; cancelled) echo "🚫";; timed_out) echo "⏱️";; queued|in_progress) echo "⏳";; *) echo "ℹ️";; esac; }
          {
            echo "# CI Summary"
            echo
            echo "Commit: ${{ github.event.workflow_run.head_sha || github.sha }}"
            echo
            echo "## Status"
            echo "- Traditional Tests: $(to_mark "${{ steps.gather.outputs.tt_status }}")  (${{ steps.gather.outputs.tt_status }})"
            echo "- CodeQL Analyze:    $(to_mark "${{ steps.gather.outputs.codeql_status }}")  (${{ steps.gather.outputs.codeql_status }})"
            echo "- Secret Scan:       $(to_mark "${{ steps.gather.outputs.secret_status }}")  (${{ steps.gather.outputs.secret_status }})"
          } > ci-summary.md

      - name: Upload summary artifact
        uses: actions/upload-artifact@v4
        with:
          name: ci-summary
          path: ci-summary.md
          retention-days: 14

      - name: Comment summary on PR
        if: github.event.workflow_run.event == 'pull_request' && github.event.workflow_run.pull_requests[0].number != ''
        uses: thollander/actions-comment-pull-request@v2
        with:
          filePath: ci-summary.md
          commentTag: ci-summary
          prNumber: ${{ github.event.workflow_run.pull_requests[0].number }}

