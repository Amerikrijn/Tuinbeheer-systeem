name: Simple CI/CD Pipeline
on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  # Job 1: Standard Tests & Build
  test-and-build:
    runs-on: ubuntu-latest
    name: 🧪 Test & Build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test
      
      - name: Build project
        run: npm run build
      
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            coverage/
            test-results/
  
  # Job 2: Quality Checks
  quality-checks:
    runs-on: ubuntu-latest
    name: 🔍 Quality Checks
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run linting
        run: npm run lint
      
      - name: Run type checking
        run: npm run typecheck
      
      - name: Check formatting
        run: npm run format
  
  # Job 3: Deploy (only if all jobs succeed)
  deploy:
    needs: [test-and-build, quality-checks]
    runs-on: ubuntu-latest
    name: 🚀 Deploy
    if: success()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Deploy to production
        run: |
          echo "🚀 Deploying to production..."
          echo "✅ Tests passed"
          echo "✅ Quality checks passed"
          echo "🚀 Starting deployment..."
          
          # Trigger Vercel deployment
          echo "🌐 Triggering Vercel deployment..."
          echo "📱 Preview URL will be available in Vercel dashboard"
          echo "🚀 Production deployment will start automatically"
  
  # Job 4: Comment PR with Results (only for PRs)
  comment-pr:
    needs: [test-and-build, quality-checks]
    runs-on: ubuntu-latest
    name: 💬 Comment PR
    if: github.event_name == 'pull_request'
    steps:
      - name: Comment PR with Results
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `## 🚀 CI/CD Pipeline Results

### 📊 Pipeline Status
- 🧪 Tests & Build: ✅ **PASSED**
- 🔍 Quality Checks: ✅ **PASSED**
- 🚀 Ready for deployment

### 💡 Next Steps
- All checks have passed successfully
- Ready to merge when approved
- Deployment will start automatically after merge

---
*Pipeline completed successfully* 🎉`;
            
            // Post comment to PR
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });