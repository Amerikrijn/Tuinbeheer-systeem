{
  "general": {
    "maxFixes": 50,
    "autoApply": false,
    "requireValidation": true,
    "outputPath": "./auto-fix-results",
    "logLevel": "info",
    "maxIterations": 2,
    "timeout": 300000
  },
  "typescript": {
    "enabled": true,
    "configPath": "./tsconfig.json",
    "strictMode": true,
    "includeNodeModules": false,
    "customRules": [],
    "diagnosticCodes": [
      2339, 2345, 2304, 2322, 2366, 7006, 6133, 6138, 6196, 7031
    ],
    "fixableIssues": [
      "Property does not exist on type",
      "Argument not assignable to parameter",
      "Cannot find name",
      "Type not assignable to type",
      "Function lacks return type annotation",
      "Parameter implicitly has an 'any' type"
    ]
  },
  "eslint": {
    "enabled": true,
    "configPath": "./.eslintrc.json",
    "autoFix": true,
    "customRules": [],
    "ignorePatterns": [
      "node_modules/**",
      "dist/**",
      "build/**",
      "coverage/**"
    ],
    "fixableRules": [
      "indent",
      "quotes",
      "semi",
      "comma-dangle",
      "no-trailing-spaces",
      "eol-last"
    ]
  },
  "machineLearning": {
    "enabled": true,
    "modelPath": "./ml-models/code-fix-model",
    "confidenceThreshold": 0.7,
    "trainingDataPath": "./ml-data/training-data.json",
    "updateFrequency": 7,
    "patterns": [
      "function-definition",
      "variable-declaration",
      "import-statement",
      "export-statement",
      "error-handling",
      "async-await",
      "type-annotation"
    ],
    "learningRate": 0.01,
    "batchSize": 32,
    "epochs": 100
  },
  "git": {
    "enabled": true,
    "autoCommit": false,
    "generatePRs": true,
    "requireReview": true,
    "branchPrefix": "auto-fix",
    "commitMessageTemplate": "fix: Auto-fix {count} issues ({types})",
    "prTitleTemplate": "ðŸ”§ Auto-fix: {count} issues ({critical} critical)",
    "prDescriptionTemplate": "./templates/pr-description.md",
    "reviewers": [],
    "labels": ["auto-fix", "code-quality"],
    "assignees": [],
    "milestone": null
  },
  "integrations": {
    "sonarQube": {
      "enabled": false,
      "url": "https://sonarqube.company.com",
      "token": "",
      "projectKey": "",
      "qualityGate": "PASSED",
      "metrics": [
        "bugs",
        "vulnerabilities",
        "code_smells",
        "coverage",
        "duplicated_lines"
      ]
    },
    "codeClimate": {
      "enabled": false,
      "url": "https://codeclimate.com",
      "token": "",
      "repositoryId": "",
      "gpaThreshold": 3.5,
      "metrics": [
        "gpa",
        "issues_count",
        "test_coverage",
        "maintainability",
        "technical_debt"
      ]
    },
    "github": {
      "enabled": false,
      "token": "",
      "owner": "",
      "repository": "",
      "baseBranch": "main",
      "workflowName": "auto-fix",
      "environment": "production"
    },
    "gitlab": {
      "enabled": false,
      "token": "",
      "url": "https://gitlab.company.com",
      "projectId": "",
      "baseBranch": "main",
      "pipelineName": "auto-fix"
    }
  },
  "validation": {
    "typescript": true,
    "eslint": true,
    "machineLearning": true,
    "custom": true,
    "rollbackOnFailure": true,
    "preCommitValidation": true,
    "postCommitValidation": true,
    "testExecution": false,
    "buildVerification": true
  },
  "fixes": {
    "security": {
      "enabled": true,
      "autoApply": false,
      "requireReview": true,
      "generatePR": true,
      "severityThreshold": "medium"
    },
    "performance": {
      "enabled": true,
      "autoApply": false,
      "requireReview": true,
      "generatePR": true,
      "severityThreshold": "medium"
    },
    "quality": {
      "enabled": true,
      "autoApply": true,
      "requireReview": false,
      "generatePR": false,
      "severityThreshold": "low"
    },
    "style": {
      "enabled": true,
      "autoApply": true,
      "requireReview": false,
      "generatePR": false,
      "severityThreshold": "low"
    },
    "typescript": {
      "enabled": true,
      "autoApply": true,
      "requireReview": false,
      "generatePR": false,
      "severityThreshold": "low"
    },
    "eslint": {
      "enabled": true,
      "autoApply": true,
      "requireReview": false,
      "generatePR": false,
      "severityThreshold": "low"
    }
  },
  "reporting": {
    "formats": ["json", "markdown", "html"],
    "includeMetrics": true,
    "includeTimeline": true,
    "includeGitHistory": true,
    "includeMLInsights": true,
    "includeExternalToolResults": true,
    "generateSummary": true,
    "generateCharts": false,
    "exportToSlack": false,
    "exportToEmail": false
  },
  "performance": {
    "parallelProcessing": true,
    "maxConcurrentFiles": 5,
    "maxConcurrentAnalyzers": 3,
    "cacheEnabled": true,
    "cacheTTL": 3600000,
    "memoryLimit": "1GB",
    "timeoutPerFile": 60000,
    "retryAttempts": 3,
    "retryDelay": 1000
  },
  "logging": {
    "level": "info",
    "format": "json",
    "output": "file",
    "filePath": "./logs/auto-fix.log",
    "maxSize": "10MB",
    "maxFiles": 5,
    "includeTimestamp": true,
    "includeContext": true,
    "includePerformance": true
  },
  "notifications": {
    "enabled": false,
    "providers": ["slack", "email", "webhook"],
    "slack": {
      "webhookUrl": "",
      "channel": "#auto-fix",
      "username": "Auto-Fix Agent",
      "iconEmoji": ":robot_face:"
    },
    "email": {
      "smtpHost": "",
      "smtpPort": 587,
      "username": "",
      "password": "",
      "from": "auto-fix@company.com",
      "to": ["team@company.com"]
    },
    "webhook": {
      "url": "",
      "method": "POST",
      "headers": {},
      "timeout": 10000
    }
  },
  "templates": {
    "commitMessage": {
      "pattern": "fix: {description}",
      "variables": {
        "description": "Auto-fix {issueType} issue on line {lineNumber}"
      }
    },
    "prTitle": {
      "pattern": "ðŸ”§ Auto-fix: {summary}",
      "variables": {
        "summary": "{count} issues ({types})"
      }
    },
    "prDescription": {
      "file": "./templates/pr-description.md",
      "variables": {
        "totalFixes": "{count}",
        "criticalFixes": "{critical}",
        "filesModified": "{files}",
        "generatedAt": "{timestamp}"
      }
    }
  },
  "advanced": {
    "customAnalyzers": [],
    "customValidators": [],
    "customFixers": [],
    "customReporters": [],
    "hooks": {
      "preAnalysis": "",
      "postAnalysis": "",
      "preFix": "",
      "postFix": "",
      "preCommit": "",
      "postCommit": "",
      "prePR": "",
      "postPR": ""
    },
    "experimental": {
      "enableGPTIntegration": false,
      "enableSemanticAnalysis": false,
      "enableDependencyGraph": false,
      "enableImpactAnalysis": false
    }
  }
}