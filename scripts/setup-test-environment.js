#!/usr/bin/env node

/**
 * Setup script for TEST environment Supabase configuration
 * This script will guide you through setting up a separate test database
 */

const fs = require('fs')
const path = require('path')
const { execSync } = require('child_process')

console.log('üß™ TUINBEHEER TEST OMGEVING SETUP')
console.log('='.repeat(50))

// Helper function to run SQL commands
function runSQL(sql, projectUrl, apiKey) {
  console.log('üìù Running SQL command...')
  // This would normally use the Supabase CLI or API
  // For now, we'll provide instructions
  console.log('‚ö†Ô∏è  Please run the following SQL in your TEST Supabase project:')
  console.log('-'.repeat(50))
  console.log(sql)
  console.log('-'.repeat(50))
}

// Helper function to create environment file
function createTestEnvFile(supabaseUrl, supabaseKey) {
  const envContent = `# TEST ENVIRONMENT CONFIGURATION
# Generated by setup-test-environment.js at ${new Date().toISOString()}

# Test Supabase Configuration
NEXT_PUBLIC_SUPABASE_URL_TEST=${supabaseUrl}
NEXT_PUBLIC_SUPABASE_ANON_KEY_TEST=${supabaseKey}
APP_ENV=test

# Production Configuration (current)
NEXT_PUBLIC_SUPABASE_URL=https://qrotadbmnkhhwhshijdy.supabase.co
NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5yZGdmaW90c2duenZ6c215bG5lIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTI0MzA4MTMsImV4cCI6MjA2ODAwNjgxM30.5ARPqu6X_YzHmKdHZKYf69jK2KZUrwLdPHwd3toD2BY

# Development Configuration (fallback to production for now)
NEXT_PUBLIC_SUPABASE_URL_DEV=https://qrotadbmnkhhwhshijdy.supabase.co
NEXT_PUBLIC_SUPABASE_ANON_KEY_DEV=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5yZGdmaW90c2duenZ6c215bG5lIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTI0MzA4MTMsImV4cCI6MjA2ODAwNjgxM30.5ARPqu6X_YzHmKdHZKYf69jK2KZUrwLdPHwd3toD2BY
`

  fs.writeFileSync('.env.test', envContent)
  console.log('‚úÖ Created .env.test file')
}

// Helper function to read and prepare SQL setup
function prepareTestDatabase() {
  console.log('\nüìã STAP 1: Database Schema Setup')
  console.log('-'.repeat(30))
  
  const schemaSQL = fs.readFileSync('database_setup.sql', 'utf8')
  return schemaSQL
}

// Helper function to create test data
function createTestData() {
  return `
-- TEST DATA VOOR TUINBEHEER SYSTEEM
-- Voeg wat test data toe voor de test omgeving

-- Test tuin
INSERT INTO gardens (id, name, description, location, total_area, garden_type, maintenance_level)
VALUES (
  'test-garden-001',
  'Test Tuin',
  'Test omgeving voor het tuinbeheer systeem',
  'Test Locatie',
  '50m¬≤',
  'Moestuin',
  'Gemiddeld'
);

-- Test plantbed
INSERT INTO plant_beds (id, garden_id, name, location, size, sun_exposure)
VALUES (
  'TB01',
  'test-garden-001',
  'Test Bed 1',
  'Noord kant',
  '10m¬≤',
  'full-sun'
);

-- Test planten
INSERT INTO plants (plant_bed_id, name, variety, status, planting_date)
VALUES 
  ('TB01', 'Test Tomaat', 'Cherry', 'healthy', CURRENT_DATE),
  ('TB01', 'Test Basilicum', 'Genovese', 'healthy', CURRENT_DATE),
  ('TB01', 'Test Sla', 'Ijsbergsla', 'healthy', CURRENT_DATE);
`
}

// Main setup function
async function setupTestEnvironment() {
  console.log('\nüöÄ Starting test environment setup...\n')
  
  // Check if we're in the right directory
  if (!fs.existsSync('database_setup.sql')) {
    console.error('‚ùå database_setup.sql not found. Please run this script from the project root.')
    process.exit(1)
  }
  
  console.log('üìã TEST ENVIRONMENT SETUP INSTRUCTIES:')
  console.log('1. Ga naar https://supabase.com/dashboard')
  console.log('2. Maak een NIEUW project aan voor TEST omgeving')
  console.log('3. Kopieer de Project URL en anon key')
  console.log('4. Voer ze hieronder in:\n')
  
  // Get user input (in real setup, you'd use readline)
  console.log('‚ö†Ô∏è  HANDMATIGE STAPPEN VEREIST:')
  console.log('1. Maak een nieuw Supabase project aan')
  console.log('2. Kopieer de credentials naar .env.test')
  console.log('3. Voer de database setup uit')
  
  // For now, create a template configuration
  const templateUrl = 'https://your-test-project.supabase.co'
  const templateKey = 'your-test-anon-key'
  
  createTestEnvFile(templateUrl, templateKey)
  
  // Prepare SQL scripts
  const schemaSQL = prepareTestDatabase()
  const testDataSQL = createTestData()
  
  // Create setup SQL file for test environment
  const fullSetupSQL = `-- TUINBEHEER TEST ENVIRONMENT SETUP
-- Run this in your TEST Supabase project SQL editor

${schemaSQL}

-- Add test data
${testDataSQL}

-- Confirm setup
SELECT 'Test environment setup completed!' as status;
`
  
  fs.writeFileSync('test-environment-setup.sql', fullSetupSQL)
  console.log('‚úÖ Created test-environment-setup.sql')
  
  console.log('\nüéØ VOLGENDE STAPPEN:')
  console.log('1. Update .env.test with your actual test project credentials')
  console.log('2. Run test-environment-setup.sql in your test Supabase project')
  console.log('3. Test the connection with: npm run test:db')
  
  console.log('\n‚úÖ Test environment configuration completed!')
}

// Run the setup
setupTestEnvironment().catch(console.error)